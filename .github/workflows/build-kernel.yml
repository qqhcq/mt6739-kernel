name: Build MT6739 Kernel with ACM Support

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 克隆完整的 Kernel 源码
      run: |
        git clone --depth=1 --single-branch --branch master https://github.com/5059d/kernel_5059d_mt6739_tcl.git
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        pwd
        ls -la
        echo "Checking for scripts directory..."
        ls -la scripts/ | head -20
        echo "Checking defconfig..."
        ls -la arch/arm64/configs/ | grep k39tv1
      
    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential bc bison flex libssl-dev libncurses-dev python3 python-is-python3 2to3
        
    - name: 下载交叉编译工具链
      run: |
        wget -P /home/runner https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        tar -C /home/runner -xf /home/runner/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        
    - name: 配置 Kernel
      run: |
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        TOOLCHAIN=/home/runner/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
        echo "TOOLCHAIN=$TOOLCHAIN"
        ${TOOLCHAIN}gcc --version
        make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" k39tv1_64_bsp_defconfig
        # 使用 yes "" 自动回答所有配置问题（使用默认值）
        yes "" | make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" oldconfig || true
        
    - name: 修复编译问题
      run: |
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        # 修复 DTC yylloc 重复定义问题
        sed -i 's/^YYLTYPE yylloc;$/extern YYLTYPE yylloc;/' scripts/dtc/dtc-lexer.lex.c || true
        # 修复 MediaTek Python 2 → 3（转换所有 Python 脚本）
        echo "Converting Python 2 scripts to Python 3..."
        find tools/dct -name '*.py' -exec 2to3 -w -n {} \; 2>/dev/null || true
        find scripts/drvgen -name '*.py' -exec 2to3 -w -n {} \; 2>/dev/null || true
        find drivers/misc/mediatek -name '*.py' -exec 2to3 -w -n {} \; 2>/dev/null || true
        echo "Python conversion completed"
        python --version
        
    - name: 编译 Kernel  
      run: |
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        TOOLCHAIN=/home/runner/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
        echo "开始编译 kernel..."
        # 先尝试编译 vmlinux
        make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" prepare
        make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" modules_prepare  
        make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" SUBDIRS=scripts
        # 编译 Image（显示错误）
        make ARCH=arm64 CROSS_COMPILE="$TOOLCHAIN" arch/arm64/boot/Image -j$(nproc)
        
    - name: 检查编译结果
      run: |
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        echo "Checking for kernel images..."
        ls -lh arch/arm64/boot/ || true
        if [ -f arch/arm64/boot/Image.gz-dtb ]; then
          echo "✅ Kernel 编译成功（Image.gz-dtb）！"
          ls -lh arch/arm64/boot/Image.gz-dtb
        elif [ -f arch/arm64/boot/Image.gz ]; then
          echo "✅ Kernel 编译成功（Image.gz）！"
          ls -lh arch/arm64/boot/Image.gz
        elif [ -f arch/arm64/boot/Image ]; then
          echo "✅ Kernel 编译成功（Image）！"
          ls -lh arch/arm64/boot/Image
        else
          echo "❌ 编译失败！"
          exit 1
        fi
        
    - name: 打包 Kernel
      run: |
        cd kernel_5059d_mt6739_tcl/kernel-4.4
        mkdir -p kernel-output
        if [ -f arch/arm64/boot/Image.gz-dtb ]; then
          cp arch/arm64/boot/Image.gz-dtb kernel-output/kernel
        elif [ -f arch/arm64/boot/Image.gz ]; then
          cp arch/arm64/boot/Image.gz kernel-output/kernel
        elif [ -f arch/arm64/boot/Image ]; then
          cp arch/arm64/boot/Image kernel-output/kernel
        fi
        cd kernel-output
        tar -czf mt6739-kernel-acm.tar.gz kernel
        
    - name: 上传编译产物
      uses: actions/upload-artifact@v4
      with:
        name: mt6739-kernel-with-acm
        path: kernel_5059d_mt6739_tcl/kernel-4.4/kernel-output/mt6739-kernel-acm.tar.gz
        
    - name: 创建 Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: kernel-${{ github.run_number }}
        files: kernel_5059d_mt6739_tcl/kernel-4.4/kernel-output/mt6739-kernel-acm.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

