name: 简单可靠编译版本

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    
    - name: 释放磁盘空间
      run: |
        sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY" &
        df -h
    
    - name: 缓存工具链
      id: cache-toolchain
      uses: actions/cache@v3
      with:
        path: gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu
        key: toolchain-linaro-7.5.0-aarch64
    
    - name: 安装依赖
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          build-essential bc bison flex libssl-dev \
          libncurses-dev wget ca-certificates
    
    - name: 下载工具链
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        wget -q https://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        tar xf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
        rm gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
    
    - name: 配置内核
      run: |
        export PATH=$PWD/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin:$PATH
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        
        # 查找配置文件
        CONFIG=$(find arch/arm64/configs -name "*6739*" -o -name "*k39tv1*" | head -1)
        if [ -z "$CONFIG" ]; then
          CONFIG=$(find arch/arm64/configs -name "*6763*" | head -1)
        fi
        if [ -z "$CONFIG" ]; then
          CONFIG="arch/arm64/configs/defconfig"
        fi
        
        echo "使用配置: $CONFIG"
        make -j$(nproc) $(basename $CONFIG)
        
        # 禁用签名（避免OpenSSL问题）
        scripts/config --disable MODULE_SIG
        scripts/config --disable MODULE_SIG_ALL
        scripts/config --disable SYSTEM_TRUSTED_KEYRING
        scripts/config --disable SYSTEM_TRUSTED_KEYS
        scripts/config --disable DEBUG_INFO
        scripts/config --disable DEBUG_INFO_DWARF4
        scripts/config --disable DEBUG_INFO_BTF
        
        # 启用USB ACM
        scripts/config --enable USB_GADGET
        scripts/config --enable USB_CONFIGFS
        scripts/config --enable USB_CONFIGFS_ACM
        scripts/config --enable USB_F_ACM
        
        make -j$(nproc) olddefconfig
    
    - name: 编译内核
      run: |
        export PATH=$PWD/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu/bin:$PATH
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        
        # 忽略警告，加速编译
        make -j$(nproc) KCFLAGS="-w" Image.gz-dtb 2>&1 | tee build.log || \
        make -j$(nproc) KCFLAGS="-w" Image.gz 2>&1 | tee build.log || \
        make -j$(nproc) KCFLAGS="-w" Image 2>&1 | tee build.log
    
    - name: 检查编译结果
      id: check
      run: |
        if [ -f arch/arm64/boot/Image.gz-dtb ]; then
          KERNEL="Image.gz-dtb"
        elif [ -f arch/arm64/boot/Image.gz ]; then
          KERNEL="Image.gz"
        elif [ -f arch/arm64/boot/Image ]; then
          KERNEL="Image"
        else
          echo "编译失败！"
          tail -n 50 build.log
          exit 1
        fi
        
        echo "KERNEL=$KERNEL" >> $GITHUB_ENV
        echo "success=true" >> $GITHUB_OUTPUT
        ls -lh arch/arm64/boot/$KERNEL
    
    - name: 打包结果
      if: steps.check.outputs.success == 'true'
      run: |
        mkdir output
        cp arch/arm64/boot/$KERNEL output/kernel-mt6739.img
        cp .config output/kernel.config
        
        cat > output/BUILD_INFO.txt << EOF
        MT6739 内核编译信息
        ==================
        编译时间: $(date)
        Commit: ${{ github.sha }}
        工具链: Linaro GCC 7.5.0
        
        已启用功能:
        ✅ USB ACM 串口支持
        ✅ USB Gadget 支持
        
        适用设备: D22 对讲机
        EOF
        
        ls -lh output/
    
    - name: 上传内核
      if: steps.check.outputs.success == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: kernel-mt6739-${{ github.run_number }}
        path: output/*
        retention-days: 30
    
    - name: 上传日志
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-log-${{ github.run_number }}
        path: build.log
        retention-days: 7

